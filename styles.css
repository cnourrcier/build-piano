/* Browsers can apply default margin and padding values to specific elements. 
To make sure your piano looks correct, you need to reset the box model. */
html {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

#piano {
    background-color: #00471b;
    width: 992px;
    height: 290px;
    margin: 80px auto;
    padding: 90px 20px 0 20px;
    position: relative;
    border-radius: 10px;
}

.keys {
    background-color: #040404;
    width: 949px;
    height: 180px;
    padding-left: 2px;
    overflow: hidden;
}

.key {
    background-color: #ffffff;
    position: relative;
    width: 41px;
    height: 175px;
    margin: 2px;
    float: left;
    border-radius: 0 0 3px 3px;
}

/* This will target the elements with the class key black--key, 
and select the pseudo-element after these elements in the HTML. */
.key.black--key::after {
    background-color: #1d1e22;
    content: "";
    /* The content property is used to set or override the content of the element. */
    /* By default, the pseudo-elements created by the ::before and ::after 
    pseudo-selectors are empty, and the elements will not be rendered to the page. 
    Setting the content property to an empty string "" 
    will ensure the element is rendered to the page while still being empty. */
    position: absolute;
    left: -18px;
    width: 32px;
    height: 100px;
    border-radius: 0 0 3px 3px;
}

.logo {
    width: 200px;
    position: absolute;
    top: 23px;
}

/* The @media at-rule, also known as a media query, 
is used to conditionally apply CSS */
@media (max-width: 768px) {
    #piano {
        width: 358px;
    }

    .keys {
        width: 318px;
    }

    .logo {
        width: 150px;
    }
}

@media (min-width: 769px) and (max-width: 1199px) {
    #piano {
        width: 675px;
    }

    .keys {
        width: 633px;
    }
}